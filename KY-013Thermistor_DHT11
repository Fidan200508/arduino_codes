#include <DHT.h>

// === KY-013 Thermistor Configuration ===
#define THERMISTOR_PIN A0  // Analog pin for KY-013
const float R1 = 10000.0;  // Resistor value on board (10kÎ©)

// Steinhart-Hart Coefficients for the thermistor
const float c1 = 0.001129148, c2 = 0.000234125, c3 = 0.0000000876741; 

// === DHT Sensor Configuration ===
#define DHTPIN 2       // Digital pin where DHT sensor is connected
#define DHTTYPE DHT11  // Change to DHT22 if using that model
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);
  dht.begin(); // Initialize DHT sensor
}

void loop() {
  // === Read Temperature from KY-013 Thermistor ===
  int Vo = analogRead(THERMISTOR_PIN); // Read analog value
  if (Vo == 0) {  // Prevent division by zero error
    Serial.println("Error: Invalid thermistor reading!");
    return;
  }

  float R2 = R1 * (1023.0 / (float)Vo - 1.0); // Calculate thermistor resistance
  float logR2 = log(R2);
  float thermistorTemp = (1.0 / (c1 + c2 * logR2 + c3 * logR2 * logR2 * logR2)) - 273.15; // Convert Kelvin to Celsius

  // === Read Temperature and Humidity from DHT Sensor ===
  float dhtTemperature = dht.readTemperature(); // Celsius
  float dhtHumidity = dht.readHumidity();

  // === Display Readings on Serial Monitor ===
  Serial.println("=== Sensor Readings ===");
  
  Serial.print("KY-013 Temperature: ");
  Serial.print(thermistorTemp);
  Serial.println(" C");

  if (!isnan(dhtTemperature) && !isnan(dhtHumidity)) {  // Check if DHT readings are valid
    Serial.print("DHT Temperature: ");
    Serial.print(dhtTemperature);
    Serial.println(" C");

    Serial.print("DHT Humidity: ");
    Serial.print(dhtHumidity);
    Serial.println(" %");
  } else {
    Serial.println("Error: Failed to read from DHT sensor!");
  }

  Serial.println("==========================\n");
  
  delay(2000); // Wait 2 seconds before next reading
}
