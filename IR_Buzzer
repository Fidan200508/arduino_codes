#include <IRremote.hpp>

/*
    IR Remote Control System

    This program reads IR signals from a remote control and performs actions based on received codes:
    - Turns on a red LED when a specific button is pressed.
    - Activates a buzzer for a short duration when another button is pressed.
*/

#include <Arduino.h>  // Only needed if not using Arduino IDE

// Define pin connections
const int IR_RECEIVE_PIN = 7;  // IR sensor signal pin
const int RED_LED_PIN = 10;    // LED output pin
const int BUZZER_PIN = 9;      // Buzzer output pin

void setup() {
    Serial.begin(9600);  // Initialize serial communication
    IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);  // Start IR receiver
    pinMode(RED_LED_PIN, OUTPUT);
    pinMode(BUZZER_PIN, OUTPUT);
}

void loop() {
    // Check if an IR signal is received
    if (IrReceiver.decode()) {
        // Print received IR code in HEX format
        Serial.print("Received IR Code: ");
        Serial.println(IrReceiver.decodedIRData.decodedRawData, HEX);
        
        IrReceiver.printIRResultShort(&Serial);  // Print decoded data

        // Perform actions based on received IR codes
        switch (IrReceiver.decodedIRData.decodedRawData) {
            case 0xE31CFF00:  // Button "5" pressed
                Serial.println("Button 5 pressed - Turning on LED");
                digitalWrite(RED_LED_PIN, HIGH);
                delay(2000);
                digitalWrite(RED_LED_PIN, LOW);
                break;

            case 0xF708FF00:  // Button "4" pressed
                Serial.println("Button 4 pressed - Activating buzzer");
                tone(BUZZER_PIN, 1000);  // Generate a 1 kHz sound
                delay(2000);
                noTone(BUZZER_PIN);  // Stop the buzzer
                delay(500);
                break;

            default:
                Serial.println("Unknown button pressed");
                break;
        }

        IrReceiver.resume();  // Prepare for next IR signal
    }
}
